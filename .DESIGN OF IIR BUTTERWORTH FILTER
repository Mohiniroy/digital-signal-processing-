# digital-signal-processing-
clc ;
close ;
wp=input('Enter the pass band frequency (Radians )= ' );
ws=input('Enter the stop band frequency (Radians )= ' );
alphap=input( ' Enter the pass band attenuation (dB)=' );
alphas=input( ' Enter the stop band attenuation(dB)=' );
T=input('Enter the Value of sampling Time=');

//Pre warping- Bilinear Transformation
omegap=(2/T)*tan(wp/2);
disp('omegap=',omegap);
omegas=(2/T)*tan(ws/2);
disp('omegas=',omegas);

//Order of the filter
N=log10(sqrt(((10^(0.1*alphas))-1)/((10^(0.1*alphap))-1)))/(log10(omegas/omegap));
disp('N=',N);
N=ceil(N);
disp('Round off value of N=',N);
//Cut off frequency
omegac=omegap/(((10^(0.1*alphap)) -1)^(1/(2* N)));
disp('omegac=',omegac);
disp('Normalised Analog LPF Transfer function H(S)=');
hs_Normalised = analpf(N,'butt',[0,0],1);
disp('Analog LPF Transfer function H(S)=');
disp(hs_Normalised);

hs= analpf(N,'butt',[0,0],omegac);
disp(hs);

z=poly(0,'z');//Defining variable z
Hz=horner(hs,(2/ T)*((z -1)/(z+1)))// Bilinear Transformation
disp('Digital LPF Transfer function H(Z)=');
disp(Hz);

HW=frmag(Hz,512); // Frequency response
w=0:%pi/511:%pi ;
plot(w/%pi,abs(HW));
xlabel(' Normalized Digital Frequency w');
ylabel('Magnitude ');
title(' Frequency Response of Butterworth IIR LPF');
